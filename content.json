[{"title":"ES6入门之babel转码","date":"2017-01-03T11:36:10.556Z","path":"2017/01/03/ES6入门之babel转码器/","text":"es6虽然出现有一段时间，各大浏览器对es6的支持度也越来越高，不过兼容性性依旧是个蛋疼的问题。今天，我就来讲讲如何用es6的方式编写程序，又不要担心环境时候支持。 附：浏览器对es6的支持可以查看 kangax.github.io/es5-compat-table/es6/。 babel转码器babel是一个广泛使用的es6转码器，可以将es6代码转为es5代码。本文将介绍如何使用babel。 全局编译在npm下安装好babel npm install --global babel-cli &nbsp;&nbsp;安装完成后就可以编译文件 babel a.js -out-file b.js&nbsp;&nbsp;或者babel a.js -o b.js &nbsp;&nbsp;就可以将a.js文件编译到b.js中 &nbsp;&nbsp;也可以将整个目录全部编译： babel src --out-dir lib或者babel src -d lib 但是这种方法并不推荐，一方面对环境产生了，另一方面，无法做到不同的项目使用不同的版本的babel。推荐下面一种方法。 在项目内编译 初始化项目 npm init 安装babel-cli npm install --save-dev babel-cli 修改项目中package.json （在devDependencies上加上script） &quot;scripts&quot;: { &quot;build&quot;: &quot;babel src -d lib&quot; }, &quot;devDependencies&quot;: { &quot;babel-cli&quot;: &quot;^6.10.1&quot; } 在项目的根目录下创建 .babelrc 文件（window系统可以用webstrom等软件创建）,在文件内输入以下内容： { &quot;presets&quot;: [], &quot;plugins&quot;: [] } 为了让babel将es6转化为es5，还需要安装： npm install --save-dev babel-preset-es2015 安装完成后在.babelrc中添加参数： { &quot;presets&quot;: [&quot;es2015&quot;], &quot;plugins&quot;: [] } 大功告成！下面来试一试 新建1.js 写上 let a = 1 在终端输入 babel 1.js -o 2.js 在项目中出现2.js文件 并出现如下代码 &quot;use strict&quot; var a=1; 编译成功，下面来试试整个目录编译： 新建src文件 在里面写几个js文件 然后在终端运行 npm run build 执行后在终端会显示 &gt; learn-es6@1.0.0 build c:\\gitWorkSpace\\learn-es6 &gt; babel src -d lib 然后就可以在项目中看到lib文件，里面存放的都是编译完成后的js文件。 很好，环境已经说完，下面开始正式进入es6的学习！","tags":[{"name":"es6","slug":"es6","permalink":"http://yoursite.com/tags/es6/"}]}]